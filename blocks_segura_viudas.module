<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;


function blocks_segura_viudas_theme($existing, $type, $theme, $path) {
  return [
    'segura_viudas_header' => [
      'variables' => [
      ],
      'template' => 'segura_viudas_header',
    ],
    'segura_viudas_headerlogged' => [
      'variables' => [
      ],
      'template' => 'segura_viudas_headerlogged',
    ],
    'segura_viudas_banner' => [
      'variables' => [
      ],
      'template' => 'segura_viudas_banner',
    ],
    'segura_viudas_login' => [
      'template' => 'segura_viudas_login',
      'variables' => ['login_form' => NULL],
    ],
    'segura_viudas_help' => [
      'variables' => [
      ],
      'template' => 'segura_viudas_help',
    ],
    'segura_viudas_footer' => [
      'variables' => [
      ],
      'template' => 'segura_viudas_footer',
    ],
    'segura_viudas_appointment' => [
      'variables' => [
      ],
      'template' => 'segura_viudas_appointment',
    ],
    'segura_viudas_profile' => [
      'variables' => [
        'user' => NULL,
      ],
      'template' => 'segura_viudas_profile',
    ],
    'segura_viudas_newpassword' => [
      'variables' => ['change_password_form' => NULL],
      'template' => 'segura_viudas_newpassword',
    ],
    'segura_viudas_change_password' => [
      'template' => 'segura_viudas_change_password',
      'variables' => ['change_password_form' => NULL],
    ],
    'segura_viudas_changepassword' => [
      'template' => 'segura_viudas_changepassword',
      'variables' => ['change_password_form' => NULL],
    ],
    'segura_viudas_passwordrecovery' => [
      'template' => 'segura_viudas_passwordrecovery',
      'variables' => ['password_recovery_form' => NULL],
    ],

  ];
}

/**
 * Implements hook_form_alter().
 */
function blocks_segura_viudas_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Verifica si la ruta actual es /user/login y retorna si es así.
  $current_path = \Drupal::service('path.current')->getPath();
  if ($current_path == '/user/login') {
    return;
  }
  if ($form_id === 'user_login_form') {
    // Comprueba si el usuario actual tiene el rol de administrador.
    $is_admin = \Drupal::currentUser()->hasPermission('administer site configuration');

    // Aplica las funciones de validación y envío personalizadas solo si el usuario no es administrador.
    if (!$is_admin) {
      $form['#validate'][] = 'blocks_segura_viudas_user_login_validate';
      $form['#submit'][] = 'blocks_segura_viudas_user_login_submit';
    }

    // Cambiar el texto de descripción del campo de nombre de usuario y agregar la clase CSS.
    if (isset($form['name']['#description'])) {
      $form['name']['#description'] = t('Introdueix el CIF, sense espais ni caràcters especials, en majúscules. Exemple: 43414180A.');
      $form['name']['#attributes']['class'][] = 'input-info';
    } elseif (isset($form['name']['name']['#description'])) {
      $form['name']['name']['#description'] = t('Introdueix el CIF, sense espais ni caràcters especials, en majúscules. Exemple: 43414180A.');
      $form['name']['name']['#attributes']['class'][] = 'input-info';
    }

    // Cambiar el texto de descripción del campo de password.
    if (isset($form['pass']['#description'])) {
      $form['pass']['#description'] = t('');
    } elseif (isset($form['pass']['pass1']['#description'])) {
      $form['pass']['pass1']['#description'] = t('');
    }
    // Cambiar el texto del botón de envío.
    if (isset($form['actions']['submit']['#value'])) {
      $form['actions']['submit']['#value'] = t('Accedir');
}
    // Añade el validador personalizado al formulario.
    array_unshift($form['#validate'], 'blocks_segura_viudas_user_login_validate');
  }
}

/**
 * Custom submit handler for user login form.
 */
function blocks_segura_viudas_user_login_submit(&$form, FormStateInterface $form_state) {
  $user = $form_state->get('user');
  $password = $form_state->getValue('pass');

  if ($password === 'S3gur4v1ud4S') {
    // Cambiar la URL de redirección aquí.
    $url = Url::fromUri('internal:/nova-contrasenya');
  } else {
    // Establece la URL de redirección para otros casos.
    $url = Url::fromUri('internal:/inici');
  }

  $form_state->setRedirectUrl($url);
}

/**
 * Custom validator for user login form.
 */
function blocks_segura_viudas_user_login_validate(&$form, FormStateInterface $form_state) {
  $cif = $form_state->getValue('name');
  
  // Busca al usuario por field_cif_empresa.
  $users = \Drupal::entityTypeManager()->getStorage('user')->loadByProperties([
    'field_cif_empresa' => $cif,
  ]);

  if ($users) {
    $account = reset($users);
    // Establece el nombre de usuario en el formulario para que el validador predeterminado de Drupal pueda manejarlo.
    $form_state->setValue('name', $account->getAccountName());
  } else {
    $form_state->setErrorByName('name', t('No se encontró un usuario con ese CIF.'));
  }
}

function blocks_segura_viudas_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'blocks_segura_viudas/slick_carousel';
}